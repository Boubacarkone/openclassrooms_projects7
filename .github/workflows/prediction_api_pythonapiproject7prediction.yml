name: Run API on Azure

on:
  push:
    branches:
      - prediction_api

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create SSH directory
        run: mkdir -p ~/.ssh

      - name: Run tests and git pull
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh -o "StrictHostKeyChecking=no" -i ~/.ssh/id_rsa bkone@flask-api.francecentral.cloudapp.azure.com << 'EOF'
            cd openclassrooms_projects7
            git checkout prediction_api
            git pull
            # Vériier si le dossier venv existe et installer les dépendances
            if [ ! -d "venv" ]; then
            python -m venv venv
            source venv/bin/activate
            pip install -r requirements.txt
            else
                source venv/bin/activate
                pip install -r requirements.txt
            fi
            # Lancer les tests
            pytest -v test.py
          EOF

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Create SSH directory
        run: mkdir -p ~/.ssh

      - name: Run API on Azure
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh -o "StrictHostKeyChecking=no" -i ~/.ssh/id_rsa bkone@flask-api.francecentral.cloudapp.azure.com << 'EOF'
            # Kill existing tmux session if it exists
            tmux kill-session -t flask_api_session 2>/dev/null || true

            # Create new tmux session and run commands
            tmux new-session -d -s flask_api_session 'cd openclassrooms_projects7; chmod +x run_api.sh; ./run_api.sh > /dev/null 2>&1 &'
          EOF
